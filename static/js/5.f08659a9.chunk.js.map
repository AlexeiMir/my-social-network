{"version":3,"sources":["utils/Paginator/Paginator.jsx","utils/Selector/Selector.jsx","News/News.jsx","News/NewsContainer.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","Paginator","totalItemsCount","pageSize","currentPage","portionSize","onPageChanged","pagesCount","Math","ceil","classes","className","count","color","page","onChange","event","value","button","display","formControl","margin","minWidth","Selector","handlePageSize","options","React","useState","open","setOpen","id","labelId","onClose","onOpen","e","currentTarget","map","option","key","title","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","News","articles","onPageNewsChanged","optionsForNews","handleSearchNews","totalResults","messageError","expanded","setExpanded","newsId","setNewsId","Alert","severity","Grid","container","justify","alignItems","item","xs","Search","handleSearch","article","source","Card","CardHeader","Avatar","aria-label","name","subheader","publishedAt","slice","CardMedia","image","urlToImage","author","CardContent","Typography","variant","component","description","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","content","NewsContainer","isLoading","useSelector","state","newsPage","dispatch","useDispatch","useEffect","getNews","Preloader","pageNumber","setPageNewsNumber","setPageSize","searchValue","searchNews"],"mappings":"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","file":"static/js/5.f08659a9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            marginTop: theme.spacing(5),\r\n        },\r\n    },\r\n}));\r\n\r\nconst Paginator = ({totalItemsCount,pageSize,portionSize=10,currentPage,onPageChanged}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount/pageSize)\r\n  /*  let pages = []\r\n    for (let i=1;i<=pagesCount;i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portionSize)\r\n    let [portionNumber,setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber-1)*portionSize + 1\r\n    let rightPortionPageNumber = portionNumber*portionSize*/\r\n    const handleChange = (event, value) => {\r\n        onPageChanged(value);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Pagination count={pagesCount} color=\"primary\" page={currentPage} onChange={handleChange} />\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        display: 'block',\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nconst Selector = ({handlePageSize,options,value}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\nconst handleOpen = () => {\r\n    setOpen(true)\r\n}\r\n\r\nconst handleClose = () => {\r\n    setOpen(false)\r\n}\r\n\r\nconst handleChange = (e) => {\r\n    handlePageSize(e.currentTarget.value)\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-controlled-open-select-label\">Set page size</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-controlled-open-select-label\"\r\n                    id=\"demo-controlled-open-select\"\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {options.map(\r\n                        option => <option key={option.title + option.value} value={option.value}>{option.title}</option> )}\r\n                </Select>\r\n\r\n\r\n            </FormControl>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Selector","import React from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport {red} from '@material-ui/core/colors';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Paginator from \"../utils/Paginator/Paginator\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Selector from \"../utils/Selector/Selector\";\r\nimport Search from \"../utils/Search/Search\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n        //marginRight: 30\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(360deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\n\r\nconst News = ({\r\n                  articles, pageSize, currentPage, onPageNewsChanged, optionsForNews,\r\n                  handlePageSize, handleSearchNews, totalResults, messageError\r\n              }) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [newsId, setNewsId] = React.useState(false);\r\n\r\n\r\n\r\n    return <>\r\n        <Paginator pageSize={pageSize} currentPage={currentPage} totalItemsCount={totalResults}\r\n                   onPageChanged={onPageNewsChanged}/>\r\n        {messageError && <Alert severity=\"warning\">{messageError}</Alert>}\r\n        <Grid container spacing={3} justify=\"center\" alignItems=\"flex-end\">\r\n            <Grid item xs={3}>\r\n                <Search handleSearch={handleSearchNews}/>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Selector options={optionsForNews} value={pageSize} handlePageSize={handlePageSize}/>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3} >\r\n            {articles.map(article => {\r\n                return <Grid key={article.source.id + article.title} item xs={4}> <Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                                {article.source.name}\r\n                            </Avatar>\r\n                        }\r\n                        title={article.title}\r\n                        subheader={`${article.publishedAt.slice(8, 10)}.${article.publishedAt.slice(5, 7)}\r\n                .${article.publishedAt.slice(0, 4)} - ${article.publishedAt.slice(11, 13)}.${article.publishedAt.slice(14, 16)}`}\r\n                    />\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={article.urlToImage}\r\n                        title={article.author}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {article.description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton\r\n                            className={clsx(classes.expand, {\r\n                                [classes.expandOpen && newsId === article.source.id]: expanded,\r\n                            })}\r\n                            onClick={() => {\r\n                                setNewsId(article.source.id)\r\n                                setExpanded(!expanded);\r\n                            }}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon/>\r\n                        </IconButton>\r\n                    </CardActions>\r\n                    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                        <CardContent>\r\n                            <Typography paragraph>{article.content}</Typography>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                </Card>\r\n                </Grid>\r\n            })}\r\n        </Grid>\r\n\r\n    </>\r\n}\r\n\r\nexport default News","import React, {useEffect} from \"react\";\r\nimport News from \"./News\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Preloader from \"../component/common/Preloader\";\r\nimport {getNews, searchNews, setPageNewsNumber, setPageSize} from \"../redux/news-reducer\";\r\n\r\n\r\nconst NewsContainer = () => {\r\n    const isLoading = useSelector(state => state.newsPage.isLoading)\r\n    const totalResults = useSelector(state => state.newsPage.totalResults)\r\n    const articles = useSelector(state => state.newsPage.articles)\r\n    const pageSize = useSelector(state => state.newsPage.pageSize)\r\n    const currentPage = useSelector(state => state.newsPage.currentPage)\r\n    const optionsForNews = useSelector(state => state.newsPage.optionsForNews)\r\n    const messageError = useSelector(state => state.newsPage.messageError)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getNews(pageSize,currentPage))\r\n    },[pageSize,currentPage])\r\n\r\n    const onPageNewsChanged = (pageNumber) => {\r\n        dispatch(setPageNewsNumber(pageNumber))\r\n    }\r\n\r\n    const handlePageSize = (value) => {\r\n        dispatch(setPageSize(value))\r\n    }\r\n\r\n    const handleSearchNews = (searchValue) => {\r\n\r\n        dispatch(searchNews(pageSize,searchValue))\r\n    }\r\n\r\n\r\n\r\n    return<>\r\n        {isLoading ? <Preloader/> : null}\r\n        <News totalResults={totalResults}\r\n              articles={articles}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageNewsChanged={onPageNewsChanged}\r\n              optionsForNews={optionsForNews}\r\n              handlePageSize={handlePageSize}\r\n              handleSearchNews={handleSearchNews}\r\n              messageError={messageError}\r\n\r\n        />\r\n    </>\r\n\r\n}\r\n\r\nexport default NewsContainer;"],"sourceRoot":""}